// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: certs.proto

package certs_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CertIssueReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CiphUsername [][]byte   `protobuf:"bytes,1,rep,name=CiphUsername,proto3" json:"CiphUsername,omitempty"`
	ClientECDH   *ECDHPoint `protobuf:"bytes,2,opt,name=clientECDH,proto3" json:"clientECDH,omitempty"`
	Salt         string     `protobuf:"bytes,3,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *CertIssueReq) Reset() {
	*x = CertIssueReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_certs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertIssueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertIssueReq) ProtoMessage() {}

func (x *CertIssueReq) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertIssueReq.ProtoReflect.Descriptor instead.
func (*CertIssueReq) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{0}
}

func (x *CertIssueReq) GetCiphUsername() [][]byte {
	if x != nil {
		return x.CiphUsername
	}
	return nil
}

func (x *CertIssueReq) GetClientECDH() *ECDHPoint {
	if x != nil {
		return x.ClientECDH
	}
	return nil
}

func (x *CertIssueReq) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

type CertRetrieveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asker        string   `protobuf:"bytes,1,opt,name=asker,proto3" json:"asker,omitempty"`
	CiphUsername [][]byte `protobuf:"bytes,2,rep,name=CiphUsername,proto3" json:"CiphUsername,omitempty"`
	Salt         string   `protobuf:"bytes,3,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *CertRetrieveReq) Reset() {
	*x = CertRetrieveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_certs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertRetrieveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertRetrieveReq) ProtoMessage() {}

func (x *CertRetrieveReq) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertRetrieveReq.ProtoReflect.Descriptor instead.
func (*CertRetrieveReq) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{1}
}

func (x *CertRetrieveReq) GetAsker() string {
	if x != nil {
		return x.Asker
	}
	return ""
}

func (x *CertRetrieveReq) GetCiphUsername() [][]byte {
	if x != nil {
		return x.CiphUsername
	}
	return nil
}

func (x *CertRetrieveReq) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

type SignPubKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey *CiphReqPubKey `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	Sign   *Sign          `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *SignPubKey) Reset() {
	*x = SignPubKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_certs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignPubKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignPubKey) ProtoMessage() {}

func (x *SignPubKey) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignPubKey.ProtoReflect.Descriptor instead.
func (*SignPubKey) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{2}
}

func (x *SignPubKey) GetPubKey() *CiphReqPubKey {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *SignPubKey) GetSign() *Sign {
	if x != nil {
		return x.Sign
	}
	return nil
}

type SignKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys *Keys `protobuf:"bytes,1,opt,name=keys,proto3" json:"keys,omitempty"`
	Sign *Sign `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *SignKeys) Reset() {
	*x = SignKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_certs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignKeys) ProtoMessage() {}

func (x *SignKeys) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignKeys.ProtoReflect.Descriptor instead.
func (*SignKeys) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{3}
}

func (x *SignKeys) GetKeys() *Keys {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *SignKeys) GetSign() *Sign {
	if x != nil {
		return x.Sign
	}
	return nil
}

// encrypted with ecdh
type CiphPubKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E []byte `protobuf:"bytes,1,opt,name=e,proto3" json:"e,omitempty"`
	N []byte `protobuf:"bytes,2,opt,name=n,proto3" json:"n,omitempty"`
}

func (x *CiphPubKey) Reset() {
	*x = CiphPubKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_certs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CiphPubKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CiphPubKey) ProtoMessage() {}

func (x *CiphPubKey) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CiphPubKey.ProtoReflect.Descriptor instead.
func (*CiphPubKey) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{4}
}

func (x *CiphPubKey) GetE() []byte {
	if x != nil {
		return x.E
	}
	return nil
}

func (x *CiphPubKey) GetN() []byte {
	if x != nil {
		return x.N
	}
	return nil
}

// encrypted with rsa
type CiphReqPubKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E [][]byte `protobuf:"bytes,1,rep,name=e,proto3" json:"e,omitempty"`
	N [][]byte `protobuf:"bytes,2,rep,name=n,proto3" json:"n,omitempty"`
}

func (x *CiphReqPubKey) Reset() {
	*x = CiphReqPubKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_certs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CiphReqPubKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CiphReqPubKey) ProtoMessage() {}

func (x *CiphReqPubKey) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CiphReqPubKey.ProtoReflect.Descriptor instead.
func (*CiphReqPubKey) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{5}
}

func (x *CiphReqPubKey) GetE() [][]byte {
	if x != nil {
		return x.E
	}
	return nil
}

func (x *CiphReqPubKey) GetN() [][]byte {
	if x != nil {
		return x.N
	}
	return nil
}

type CiphPrivKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	D []byte `protobuf:"bytes,1,opt,name=d,proto3" json:"d,omitempty"`
	N []byte `protobuf:"bytes,2,opt,name=n,proto3" json:"n,omitempty"`
}

func (x *CiphPrivKey) Reset() {
	*x = CiphPrivKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_certs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CiphPrivKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CiphPrivKey) ProtoMessage() {}

func (x *CiphPrivKey) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CiphPrivKey.ProtoReflect.Descriptor instead.
func (*CiphPrivKey) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{6}
}

func (x *CiphPrivKey) GetD() []byte {
	if x != nil {
		return x.D
	}
	return nil
}

func (x *CiphPrivKey) GetN() []byte {
	if x != nil {
		return x.N
	}
	return nil
}

type Keys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerECDH *ECDHPoint   `protobuf:"bytes,1,opt,name=serverECDH,proto3" json:"serverECDH,omitempty"`
	Pub        *CiphPubKey  `protobuf:"bytes,2,opt,name=pub,proto3" json:"pub,omitempty"`
	Priv       *CiphPrivKey `protobuf:"bytes,3,opt,name=priv,proto3" json:"priv,omitempty"`
}

func (x *Keys) Reset() {
	*x = Keys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_certs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keys) ProtoMessage() {}

func (x *Keys) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keys.ProtoReflect.Descriptor instead.
func (*Keys) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{7}
}

func (x *Keys) GetServerECDH() *ECDHPoint {
	if x != nil {
		return x.ServerECDH
	}
	return nil
}

func (x *Keys) GetPub() *CiphPubKey {
	if x != nil {
		return x.Pub
	}
	return nil
}

func (x *Keys) GetPriv() *CiphPrivKey {
	if x != nil {
		return x.Priv
	}
	return nil
}

type Sign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cipher [][]byte `protobuf:"bytes,1,rep,name=cipher,proto3" json:"cipher,omitempty"`
}

func (x *Sign) Reset() {
	*x = Sign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_certs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sign) ProtoMessage() {}

func (x *Sign) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sign.ProtoReflect.Descriptor instead.
func (*Sign) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{8}
}

func (x *Sign) GetCipher() [][]byte {
	if x != nil {
		return x.Cipher
	}
	return nil
}

type ECDHPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X string `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y string `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *ECDHPoint) Reset() {
	*x = ECDHPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_certs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECDHPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECDHPoint) ProtoMessage() {}

func (x *ECDHPoint) ProtoReflect() protoreflect.Message {
	mi := &file_certs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECDHPoint.ProtoReflect.Descriptor instead.
func (*ECDHPoint) Descriptor() ([]byte, []int) {
	return file_certs_proto_rawDescGZIP(), []int{9}
}

func (x *ECDHPoint) GetX() string {
	if x != nil {
		return x.X
	}
	return ""
}

func (x *ECDHPoint) GetY() string {
	if x != nil {
		return x.Y
	}
	return ""
}

var File_certs_proto protoreflect.FileDescriptor

var file_certs_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a,
	0x0c, 0x43, 0x65, 0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a,
	0x0c, 0x43, 0x69, 0x70, 0x68, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x0c, 0x43, 0x69, 0x70, 0x68, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x43, 0x44, 0x48, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x45, 0x43, 0x44, 0x48, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x43, 0x44, 0x48, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61, 0x6c,
	0x74, 0x22, 0x5f, 0x0a, 0x0f, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x6b, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x69,
	0x70, 0x68, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x0c, 0x43, 0x69, 0x70, 0x68, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61,
	0x6c, 0x74, 0x22, 0x4f, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x12, 0x26, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x43, 0x69, 0x70, 0x68, 0x52, 0x65, 0x71, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x22, 0x40, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x12,
	0x19, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x4b, 0x65, 0x79, 0x73, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x19, 0x0a, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x28, 0x0a, 0x0a, 0x43, 0x69, 0x70, 0x68, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01,
	0x65, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x6e, 0x22,
	0x2b, 0x0a, 0x0d, 0x43, 0x69, 0x70, 0x68, 0x52, 0x65, 0x71, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x12, 0x0c, 0x0a, 0x01, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x01, 0x65, 0x12, 0x0c,
	0x0a, 0x01, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x01, 0x6e, 0x22, 0x29, 0x0a, 0x0b,
	0x43, 0x69, 0x70, 0x68, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x6e, 0x22, 0x73, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x12,
	0x2a, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x43, 0x44, 0x48, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x45, 0x43, 0x44, 0x48, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x43, 0x44, 0x48, 0x12, 0x1d, 0x0a, 0x03, 0x70,
	0x75, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x69, 0x70, 0x68, 0x50,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x70, 0x75, 0x62, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x72,
	0x69, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x69, 0x70, 0x68, 0x50,
	0x72, 0x69, 0x76, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x70, 0x72, 0x69, 0x76, 0x22, 0x1e, 0x0a, 0x04,
	0x53, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x22, 0x27, 0x0a, 0x09,
	0x45, 0x43, 0x44, 0x48, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x01, 0x79, 0x32, 0x61, 0x0a, 0x05, 0x43, 0x65, 0x72, 0x74, 0x73, 0x12, 0x27,
	0x0a, 0x09, 0x49, 0x73, 0x73, 0x75, 0x65, 0x43, 0x65, 0x72, 0x74, 0x12, 0x0d, 0x2e, 0x43, 0x65,
	0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x43, 0x65, 0x72, 0x74, 0x12, 0x10, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x63, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_certs_proto_rawDescOnce sync.Once
	file_certs_proto_rawDescData = file_certs_proto_rawDesc
)

func file_certs_proto_rawDescGZIP() []byte {
	file_certs_proto_rawDescOnce.Do(func() {
		file_certs_proto_rawDescData = protoimpl.X.CompressGZIP(file_certs_proto_rawDescData)
	})
	return file_certs_proto_rawDescData
}

var file_certs_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_certs_proto_goTypes = []interface{}{
	(*CertIssueReq)(nil),    // 0: CertIssueReq
	(*CertRetrieveReq)(nil), // 1: CertRetrieveReq
	(*SignPubKey)(nil),      // 2: SignPubKey
	(*SignKeys)(nil),        // 3: SignKeys
	(*CiphPubKey)(nil),      // 4: CiphPubKey
	(*CiphReqPubKey)(nil),   // 5: CiphReqPubKey
	(*CiphPrivKey)(nil),     // 6: CiphPrivKey
	(*Keys)(nil),            // 7: Keys
	(*Sign)(nil),            // 8: Sign
	(*ECDHPoint)(nil),       // 9: ECDHPoint
}
var file_certs_proto_depIdxs = []int32{
	9,  // 0: CertIssueReq.clientECDH:type_name -> ECDHPoint
	5,  // 1: SignPubKey.pubKey:type_name -> CiphReqPubKey
	8,  // 2: SignPubKey.sign:type_name -> Sign
	7,  // 3: SignKeys.keys:type_name -> Keys
	8,  // 4: SignKeys.sign:type_name -> Sign
	9,  // 5: Keys.serverECDH:type_name -> ECDHPoint
	4,  // 6: Keys.pub:type_name -> CiphPubKey
	6,  // 7: Keys.priv:type_name -> CiphPrivKey
	0,  // 8: Certs.IssueCert:input_type -> CertIssueReq
	1,  // 9: Certs.RetrieveCert:input_type -> CertRetrieveReq
	3,  // 10: Certs.IssueCert:output_type -> SignKeys
	2,  // 11: Certs.RetrieveCert:output_type -> SignPubKey
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_certs_proto_init() }
func file_certs_proto_init() {
	if File_certs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_certs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertIssueReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_certs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertRetrieveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_certs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignPubKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_certs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_certs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CiphPubKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_certs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CiphReqPubKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_certs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CiphPrivKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_certs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_certs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_certs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECDHPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_certs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_certs_proto_goTypes,
		DependencyIndexes: file_certs_proto_depIdxs,
		MessageInfos:      file_certs_proto_msgTypes,
	}.Build()
	File_certs_proto = out.File
	file_certs_proto_rawDesc = nil
	file_certs_proto_goTypes = nil
	file_certs_proto_depIdxs = nil
}
